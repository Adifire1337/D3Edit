// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ItemCrafting.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D3.ItemCrafting {

  /// <summary>Holder for reflection information generated from ItemCrafting.proto</summary>
  public static partial class ItemCraftingReflection {

    #region Descriptor
    /// <summary>File descriptor for ItemCrafting.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemCraftingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJJdGVtQ3JhZnRpbmcucHJvdG8SD0QzLkl0ZW1DcmFmdGluZxoRR2FtZUJh",
            "bGFuY2UucHJvdG8iqQEKC0NyYWZ0ZXJEYXRhEg8KB3JlY2lwZXMYASADKA8S",
            "JQodZGVwcmVjYXRlZF9hdmFpbGFibGVfZW5jaGFudHMYAiADKA8SDQoFbGV2",
            "ZWwYAyABKAUSFAoMY29vbGRvd25fZW5kGAQgASgQEhgKEHJlY2lwZXNfYml0",
            "ZmllbGQYBSABKAwSIwobYml0ZmllbGRfbGVhZGluZ19udWxsX2J5dGVzGAYg",
            "ASgFIi4KFUNyYWZ0ZXJEZXZpbHNIYW5kRGF0YRIVCg11bmxvY2tlZF9zZXRz",
            "GAEgAygPIpYCChBDcmFmdGVyU2F2ZWREYXRhEjIKDGNyYWZ0ZXJfZGF0YRgB",
            "IAMoCzIcLkQzLkl0ZW1DcmFmdGluZy5DcmFmdGVyRGF0YRI5Cg10cmFuc21v",
            "Z19kYXRhGAIgASgLMiIuRDMuR2FtZUJhbGFuY2UuQml0UGFja2VkR2JpZEFy",
            "cmF5EksKG2RlcHJlY2F0ZWRfZGV2aWxzX2hhbmRfZGF0YRgDIAEoCzImLkQz",
            "Lkl0ZW1DcmFmdGluZy5DcmFmdGVyRGV2aWxzSGFuZERhdGESRgoaZXh0cmFj",
            "dGVkX2xlZ2VuZGFyaWVzX2RhdGEYBCABKAsyIi5EMy5HYW1lQmFsYW5jZS5C",
            "aXRQYWNrZWRHYmlkQXJyYXliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::D3.GameBalance.GameBalanceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.ItemCrafting.CrafterData), global::D3.ItemCrafting.CrafterData.Parser, new[]{ "Recipes", "DeprecatedAvailableEnchants", "Level", "CooldownEnd", "RecipesBitfield", "BitfieldLeadingNullBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.ItemCrafting.CrafterDevilsHandData), global::D3.ItemCrafting.CrafterDevilsHandData.Parser, new[]{ "UnlockedSets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.ItemCrafting.CrafterSavedData), global::D3.ItemCrafting.CrafterSavedData.Parser, new[]{ "CrafterData", "TransmogData", "DeprecatedDevilsHandData", "ExtractedLegendariesData" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CrafterData : pb::IMessage<CrafterData> {
    private static readonly pb::MessageParser<CrafterData> _parser = new pb::MessageParser<CrafterData>(() => new CrafterData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrafterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.ItemCrafting.ItemCraftingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterData(CrafterData other) : this() {
      recipes_ = other.recipes_.Clone();
      deprecatedAvailableEnchants_ = other.deprecatedAvailableEnchants_.Clone();
      level_ = other.level_;
      cooldownEnd_ = other.cooldownEnd_;
      recipesBitfield_ = other.recipesBitfield_;
      bitfieldLeadingNullBytes_ = other.bitfieldLeadingNullBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterData Clone() {
      return new CrafterData(this);
    }

    /// <summary>Field number for the "recipes" field.</summary>
    public const int RecipesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_recipes_codec
        = pb::FieldCodec.ForSFixed32(10);
    private readonly pbc::RepeatedField<int> recipes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Recipes {
      get { return recipes_; }
    }

    /// <summary>Field number for the "deprecated_available_enchants" field.</summary>
    public const int DeprecatedAvailableEnchantsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_deprecatedAvailableEnchants_codec
        = pb::FieldCodec.ForSFixed32(18);
    private readonly pbc::RepeatedField<int> deprecatedAvailableEnchants_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DeprecatedAvailableEnchants {
      get { return deprecatedAvailableEnchants_; }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "cooldown_end" field.</summary>
    public const int CooldownEndFieldNumber = 4;
    private long cooldownEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CooldownEnd {
      get { return cooldownEnd_; }
      set {
        cooldownEnd_ = value;
      }
    }

    /// <summary>Field number for the "recipes_bitfield" field.</summary>
    public const int RecipesBitfieldFieldNumber = 5;
    private pb::ByteString recipesBitfield_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RecipesBitfield {
      get { return recipesBitfield_; }
      set {
        recipesBitfield_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bitfield_leading_null_bytes" field.</summary>
    public const int BitfieldLeadingNullBytesFieldNumber = 6;
    private int bitfieldLeadingNullBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BitfieldLeadingNullBytes {
      get { return bitfieldLeadingNullBytes_; }
      set {
        bitfieldLeadingNullBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrafterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrafterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!recipes_.Equals(other.recipes_)) return false;
      if(!deprecatedAvailableEnchants_.Equals(other.deprecatedAvailableEnchants_)) return false;
      if (Level != other.Level) return false;
      if (CooldownEnd != other.CooldownEnd) return false;
      if (RecipesBitfield != other.RecipesBitfield) return false;
      if (BitfieldLeadingNullBytes != other.BitfieldLeadingNullBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= recipes_.GetHashCode();
      hash ^= deprecatedAvailableEnchants_.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (CooldownEnd != 0L) hash ^= CooldownEnd.GetHashCode();
      if (RecipesBitfield.Length != 0) hash ^= RecipesBitfield.GetHashCode();
      if (BitfieldLeadingNullBytes != 0) hash ^= BitfieldLeadingNullBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      recipes_.WriteTo(output, _repeated_recipes_codec);
      deprecatedAvailableEnchants_.WriteTo(output, _repeated_deprecatedAvailableEnchants_codec);
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (CooldownEnd != 0L) {
        output.WriteRawTag(33);
        output.WriteSFixed64(CooldownEnd);
      }
      if (RecipesBitfield.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(RecipesBitfield);
      }
      if (BitfieldLeadingNullBytes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BitfieldLeadingNullBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += recipes_.CalculateSize(_repeated_recipes_codec);
      size += deprecatedAvailableEnchants_.CalculateSize(_repeated_deprecatedAvailableEnchants_codec);
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (CooldownEnd != 0L) {
        size += 1 + 8;
      }
      if (RecipesBitfield.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RecipesBitfield);
      }
      if (BitfieldLeadingNullBytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitfieldLeadingNullBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrafterData other) {
      if (other == null) {
        return;
      }
      recipes_.Add(other.recipes_);
      deprecatedAvailableEnchants_.Add(other.deprecatedAvailableEnchants_);
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.CooldownEnd != 0L) {
        CooldownEnd = other.CooldownEnd;
      }
      if (other.RecipesBitfield.Length != 0) {
        RecipesBitfield = other.RecipesBitfield;
      }
      if (other.BitfieldLeadingNullBytes != 0) {
        BitfieldLeadingNullBytes = other.BitfieldLeadingNullBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            recipes_.AddEntriesFrom(input, _repeated_recipes_codec);
            break;
          }
          case 18:
          case 21: {
            deprecatedAvailableEnchants_.AddEntriesFrom(input, _repeated_deprecatedAvailableEnchants_codec);
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 33: {
            CooldownEnd = input.ReadSFixed64();
            break;
          }
          case 42: {
            RecipesBitfield = input.ReadBytes();
            break;
          }
          case 48: {
            BitfieldLeadingNullBytes = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrafterDevilsHandData : pb::IMessage<CrafterDevilsHandData> {
    private static readonly pb::MessageParser<CrafterDevilsHandData> _parser = new pb::MessageParser<CrafterDevilsHandData>(() => new CrafterDevilsHandData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrafterDevilsHandData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.ItemCrafting.ItemCraftingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterDevilsHandData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterDevilsHandData(CrafterDevilsHandData other) : this() {
      unlockedSets_ = other.unlockedSets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterDevilsHandData Clone() {
      return new CrafterDevilsHandData(this);
    }

    /// <summary>Field number for the "unlocked_sets" field.</summary>
    public const int UnlockedSetsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_unlockedSets_codec
        = pb::FieldCodec.ForSFixed32(10);
    private readonly pbc::RepeatedField<int> unlockedSets_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnlockedSets {
      get { return unlockedSets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrafterDevilsHandData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrafterDevilsHandData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unlockedSets_.Equals(other.unlockedSets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unlockedSets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unlockedSets_.WriteTo(output, _repeated_unlockedSets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unlockedSets_.CalculateSize(_repeated_unlockedSets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrafterDevilsHandData other) {
      if (other == null) {
        return;
      }
      unlockedSets_.Add(other.unlockedSets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            unlockedSets_.AddEntriesFrom(input, _repeated_unlockedSets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrafterSavedData : pb::IMessage<CrafterSavedData> {
    private static readonly pb::MessageParser<CrafterSavedData> _parser = new pb::MessageParser<CrafterSavedData>(() => new CrafterSavedData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrafterSavedData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.ItemCrafting.ItemCraftingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterSavedData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterSavedData(CrafterSavedData other) : this() {
      crafterData_ = other.crafterData_.Clone();
      transmogData_ = other.transmogData_ != null ? other.transmogData_.Clone() : null;
      deprecatedDevilsHandData_ = other.deprecatedDevilsHandData_ != null ? other.deprecatedDevilsHandData_.Clone() : null;
      extractedLegendariesData_ = other.extractedLegendariesData_ != null ? other.extractedLegendariesData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrafterSavedData Clone() {
      return new CrafterSavedData(this);
    }

    /// <summary>Field number for the "crafter_data" field.</summary>
    public const int CrafterDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.ItemCrafting.CrafterData> _repeated_crafterData_codec
        = pb::FieldCodec.ForMessage(10, global::D3.ItemCrafting.CrafterData.Parser);
    private readonly pbc::RepeatedField<global::D3.ItemCrafting.CrafterData> crafterData_ = new pbc::RepeatedField<global::D3.ItemCrafting.CrafterData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.ItemCrafting.CrafterData> CrafterData {
      get { return crafterData_; }
    }

    /// <summary>Field number for the "transmog_data" field.</summary>
    public const int TransmogDataFieldNumber = 2;
    private global::D3.GameBalance.BitPackedGbidArray transmogData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D3.GameBalance.BitPackedGbidArray TransmogData {
      get { return transmogData_; }
      set {
        transmogData_ = value;
      }
    }

    /// <summary>Field number for the "deprecated_devils_hand_data" field.</summary>
    public const int DeprecatedDevilsHandDataFieldNumber = 3;
    private global::D3.ItemCrafting.CrafterDevilsHandData deprecatedDevilsHandData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D3.ItemCrafting.CrafterDevilsHandData DeprecatedDevilsHandData {
      get { return deprecatedDevilsHandData_; }
      set {
        deprecatedDevilsHandData_ = value;
      }
    }

    /// <summary>Field number for the "extracted_legendaries_data" field.</summary>
    public const int ExtractedLegendariesDataFieldNumber = 4;
    private global::D3.GameBalance.BitPackedGbidArray extractedLegendariesData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D3.GameBalance.BitPackedGbidArray ExtractedLegendariesData {
      get { return extractedLegendariesData_; }
      set {
        extractedLegendariesData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrafterSavedData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrafterSavedData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!crafterData_.Equals(other.crafterData_)) return false;
      if (!object.Equals(TransmogData, other.TransmogData)) return false;
      if (!object.Equals(DeprecatedDevilsHandData, other.DeprecatedDevilsHandData)) return false;
      if (!object.Equals(ExtractedLegendariesData, other.ExtractedLegendariesData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= crafterData_.GetHashCode();
      if (transmogData_ != null) hash ^= TransmogData.GetHashCode();
      if (deprecatedDevilsHandData_ != null) hash ^= DeprecatedDevilsHandData.GetHashCode();
      if (extractedLegendariesData_ != null) hash ^= ExtractedLegendariesData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      crafterData_.WriteTo(output, _repeated_crafterData_codec);
      if (transmogData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransmogData);
      }
      if (deprecatedDevilsHandData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeprecatedDevilsHandData);
      }
      if (extractedLegendariesData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtractedLegendariesData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += crafterData_.CalculateSize(_repeated_crafterData_codec);
      if (transmogData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransmogData);
      }
      if (deprecatedDevilsHandData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeprecatedDevilsHandData);
      }
      if (extractedLegendariesData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtractedLegendariesData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrafterSavedData other) {
      if (other == null) {
        return;
      }
      crafterData_.Add(other.crafterData_);
      if (other.transmogData_ != null) {
        if (transmogData_ == null) {
          transmogData_ = new global::D3.GameBalance.BitPackedGbidArray();
        }
        TransmogData.MergeFrom(other.TransmogData);
      }
      if (other.deprecatedDevilsHandData_ != null) {
        if (deprecatedDevilsHandData_ == null) {
          deprecatedDevilsHandData_ = new global::D3.ItemCrafting.CrafterDevilsHandData();
        }
        DeprecatedDevilsHandData.MergeFrom(other.DeprecatedDevilsHandData);
      }
      if (other.extractedLegendariesData_ != null) {
        if (extractedLegendariesData_ == null) {
          extractedLegendariesData_ = new global::D3.GameBalance.BitPackedGbidArray();
        }
        ExtractedLegendariesData.MergeFrom(other.ExtractedLegendariesData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            crafterData_.AddEntriesFrom(input, _repeated_crafterData_codec);
            break;
          }
          case 18: {
            if (transmogData_ == null) {
              transmogData_ = new global::D3.GameBalance.BitPackedGbidArray();
            }
            input.ReadMessage(transmogData_);
            break;
          }
          case 26: {
            if (deprecatedDevilsHandData_ == null) {
              deprecatedDevilsHandData_ = new global::D3.ItemCrafting.CrafterDevilsHandData();
            }
            input.ReadMessage(deprecatedDevilsHandData_);
            break;
          }
          case 34: {
            if (extractedLegendariesData_ == null) {
              extractedLegendariesData_ = new global::D3.GameBalance.BitPackedGbidArray();
            }
            input.ReadMessage(extractedLegendariesData_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
