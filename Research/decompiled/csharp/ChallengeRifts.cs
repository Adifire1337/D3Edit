// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChallengeRifts.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D3.ChallengeRifts {

  /// <summary>Holder for reflection information generated from ChallengeRifts.proto</summary>
  public static partial class ChallengeRiftsReflection {

    #region Descriptor
    /// <summary>File descriptor for ChallengeRifts.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChallengeRiftsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRDaGFsbGVuZ2VSaWZ0cy5wcm90bxIRRDMuQ2hhbGxlbmdlUmlmdHMaEEhl",
            "cm9Db21tb24ucHJvdG8i5AEKDUNoYWxsZW5nZURhdGESGAoQY2hhbGxlbmdl",
            "X251bWJlchgBIAEoDRIhChljaGFsbGVuZ2Vfc3RhcnRfdW5peF90aW1lGAIg",
            "ASgDEioKImNoYWxsZW5nZV9sYXN0X2Jyb2FkY2FzdF91bml4X3RpbWUYAyAB",
            "KAMSJwofY2hhbGxlbmdlX2VuZF91bml4X3RpbWVfY29uc29sZRgEIAEoAxIW",
            "Cg5jaGFsbGVuZ2VfaGFzaBgFIAEoBBIpCiFjaGFsbGVuZ2VfbmVwaGFsZW1f",
            "b3JiX211bHRpcGxpZXIYBiABKAIiiwEKC0FjY291bnREYXRhEiQKHGxhc3Rf",
            "Y2hhbGxlbmdlX3Jld2FyZF9lYXJuZWQYASABKA0SHAoUbGFzdF9jaGFsbGVu",
            "Z2VfdHJpZWQYAiABKA0SOAoTc2F2ZWRfY29udmVyc2F0aW9ucxgDIAEoCzIb",
            "LkQzLkhlcm8uU2F2ZWRDb252ZXJzYXRpb25zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::D3.Hero.HeroCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.ChallengeRifts.ChallengeData), global::D3.ChallengeRifts.ChallengeData.Parser, new[]{ "ChallengeNumber", "ChallengeStartUnixTime", "ChallengeLastBroadcastUnixTime", "ChallengeEndUnixTimeConsole", "ChallengeHash", "ChallengeNephalemOrbMultiplier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.ChallengeRifts.AccountData), global::D3.ChallengeRifts.AccountData.Parser, new[]{ "LastChallengeRewardEarned", "LastChallengeTried", "SavedConversations" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChallengeData : pb::IMessage<ChallengeData> {
    private static readonly pb::MessageParser<ChallengeData> _parser = new pb::MessageParser<ChallengeData>(() => new ChallengeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChallengeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.ChallengeRifts.ChallengeRiftsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeData(ChallengeData other) : this() {
      challengeNumber_ = other.challengeNumber_;
      challengeStartUnixTime_ = other.challengeStartUnixTime_;
      challengeLastBroadcastUnixTime_ = other.challengeLastBroadcastUnixTime_;
      challengeEndUnixTimeConsole_ = other.challengeEndUnixTimeConsole_;
      challengeHash_ = other.challengeHash_;
      challengeNephalemOrbMultiplier_ = other.challengeNephalemOrbMultiplier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChallengeData Clone() {
      return new ChallengeData(this);
    }

    /// <summary>Field number for the "challenge_number" field.</summary>
    public const int ChallengeNumberFieldNumber = 1;
    private uint challengeNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ChallengeNumber {
      get { return challengeNumber_; }
      set {
        challengeNumber_ = value;
      }
    }

    /// <summary>Field number for the "challenge_start_unix_time" field.</summary>
    public const int ChallengeStartUnixTimeFieldNumber = 2;
    private long challengeStartUnixTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChallengeStartUnixTime {
      get { return challengeStartUnixTime_; }
      set {
        challengeStartUnixTime_ = value;
      }
    }

    /// <summary>Field number for the "challenge_last_broadcast_unix_time" field.</summary>
    public const int ChallengeLastBroadcastUnixTimeFieldNumber = 3;
    private long challengeLastBroadcastUnixTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChallengeLastBroadcastUnixTime {
      get { return challengeLastBroadcastUnixTime_; }
      set {
        challengeLastBroadcastUnixTime_ = value;
      }
    }

    /// <summary>Field number for the "challenge_end_unix_time_console" field.</summary>
    public const int ChallengeEndUnixTimeConsoleFieldNumber = 4;
    private long challengeEndUnixTimeConsole_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChallengeEndUnixTimeConsole {
      get { return challengeEndUnixTimeConsole_; }
      set {
        challengeEndUnixTimeConsole_ = value;
      }
    }

    /// <summary>Field number for the "challenge_hash" field.</summary>
    public const int ChallengeHashFieldNumber = 5;
    private ulong challengeHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChallengeHash {
      get { return challengeHash_; }
      set {
        challengeHash_ = value;
      }
    }

    /// <summary>Field number for the "challenge_nephalem_orb_multiplier" field.</summary>
    public const int ChallengeNephalemOrbMultiplierFieldNumber = 6;
    private float challengeNephalemOrbMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ChallengeNephalemOrbMultiplier {
      get { return challengeNephalemOrbMultiplier_; }
      set {
        challengeNephalemOrbMultiplier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChallengeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChallengeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChallengeNumber != other.ChallengeNumber) return false;
      if (ChallengeStartUnixTime != other.ChallengeStartUnixTime) return false;
      if (ChallengeLastBroadcastUnixTime != other.ChallengeLastBroadcastUnixTime) return false;
      if (ChallengeEndUnixTimeConsole != other.ChallengeEndUnixTimeConsole) return false;
      if (ChallengeHash != other.ChallengeHash) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChallengeNephalemOrbMultiplier, other.ChallengeNephalemOrbMultiplier)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChallengeNumber != 0) hash ^= ChallengeNumber.GetHashCode();
      if (ChallengeStartUnixTime != 0L) hash ^= ChallengeStartUnixTime.GetHashCode();
      if (ChallengeLastBroadcastUnixTime != 0L) hash ^= ChallengeLastBroadcastUnixTime.GetHashCode();
      if (ChallengeEndUnixTimeConsole != 0L) hash ^= ChallengeEndUnixTimeConsole.GetHashCode();
      if (ChallengeHash != 0UL) hash ^= ChallengeHash.GetHashCode();
      if (ChallengeNephalemOrbMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChallengeNephalemOrbMultiplier);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChallengeNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChallengeNumber);
      }
      if (ChallengeStartUnixTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ChallengeStartUnixTime);
      }
      if (ChallengeLastBroadcastUnixTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ChallengeLastBroadcastUnixTime);
      }
      if (ChallengeEndUnixTimeConsole != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ChallengeEndUnixTimeConsole);
      }
      if (ChallengeHash != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(ChallengeHash);
      }
      if (ChallengeNephalemOrbMultiplier != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ChallengeNephalemOrbMultiplier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChallengeNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeNumber);
      }
      if (ChallengeStartUnixTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChallengeStartUnixTime);
      }
      if (ChallengeLastBroadcastUnixTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChallengeLastBroadcastUnixTime);
      }
      if (ChallengeEndUnixTimeConsole != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChallengeEndUnixTimeConsole);
      }
      if (ChallengeHash != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChallengeHash);
      }
      if (ChallengeNephalemOrbMultiplier != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChallengeData other) {
      if (other == null) {
        return;
      }
      if (other.ChallengeNumber != 0) {
        ChallengeNumber = other.ChallengeNumber;
      }
      if (other.ChallengeStartUnixTime != 0L) {
        ChallengeStartUnixTime = other.ChallengeStartUnixTime;
      }
      if (other.ChallengeLastBroadcastUnixTime != 0L) {
        ChallengeLastBroadcastUnixTime = other.ChallengeLastBroadcastUnixTime;
      }
      if (other.ChallengeEndUnixTimeConsole != 0L) {
        ChallengeEndUnixTimeConsole = other.ChallengeEndUnixTimeConsole;
      }
      if (other.ChallengeHash != 0UL) {
        ChallengeHash = other.ChallengeHash;
      }
      if (other.ChallengeNephalemOrbMultiplier != 0F) {
        ChallengeNephalemOrbMultiplier = other.ChallengeNephalemOrbMultiplier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChallengeNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            ChallengeStartUnixTime = input.ReadInt64();
            break;
          }
          case 24: {
            ChallengeLastBroadcastUnixTime = input.ReadInt64();
            break;
          }
          case 32: {
            ChallengeEndUnixTimeConsole = input.ReadInt64();
            break;
          }
          case 40: {
            ChallengeHash = input.ReadUInt64();
            break;
          }
          case 53: {
            ChallengeNephalemOrbMultiplier = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountData : pb::IMessage<AccountData> {
    private static readonly pb::MessageParser<AccountData> _parser = new pb::MessageParser<AccountData>(() => new AccountData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.ChallengeRifts.ChallengeRiftsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountData(AccountData other) : this() {
      lastChallengeRewardEarned_ = other.lastChallengeRewardEarned_;
      lastChallengeTried_ = other.lastChallengeTried_;
      savedConversations_ = other.savedConversations_ != null ? other.savedConversations_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountData Clone() {
      return new AccountData(this);
    }

    /// <summary>Field number for the "last_challenge_reward_earned" field.</summary>
    public const int LastChallengeRewardEarnedFieldNumber = 1;
    private uint lastChallengeRewardEarned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LastChallengeRewardEarned {
      get { return lastChallengeRewardEarned_; }
      set {
        lastChallengeRewardEarned_ = value;
      }
    }

    /// <summary>Field number for the "last_challenge_tried" field.</summary>
    public const int LastChallengeTriedFieldNumber = 2;
    private uint lastChallengeTried_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LastChallengeTried {
      get { return lastChallengeTried_; }
      set {
        lastChallengeTried_ = value;
      }
    }

    /// <summary>Field number for the "saved_conversations" field.</summary>
    public const int SavedConversationsFieldNumber = 3;
    private global::D3.Hero.SavedConversations savedConversations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D3.Hero.SavedConversations SavedConversations {
      get { return savedConversations_; }
      set {
        savedConversations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastChallengeRewardEarned != other.LastChallengeRewardEarned) return false;
      if (LastChallengeTried != other.LastChallengeTried) return false;
      if (!object.Equals(SavedConversations, other.SavedConversations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastChallengeRewardEarned != 0) hash ^= LastChallengeRewardEarned.GetHashCode();
      if (LastChallengeTried != 0) hash ^= LastChallengeTried.GetHashCode();
      if (savedConversations_ != null) hash ^= SavedConversations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LastChallengeRewardEarned != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LastChallengeRewardEarned);
      }
      if (LastChallengeTried != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LastChallengeTried);
      }
      if (savedConversations_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SavedConversations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastChallengeRewardEarned != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastChallengeRewardEarned);
      }
      if (LastChallengeTried != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastChallengeTried);
      }
      if (savedConversations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SavedConversations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountData other) {
      if (other == null) {
        return;
      }
      if (other.LastChallengeRewardEarned != 0) {
        LastChallengeRewardEarned = other.LastChallengeRewardEarned;
      }
      if (other.LastChallengeTried != 0) {
        LastChallengeTried = other.LastChallengeTried;
      }
      if (other.savedConversations_ != null) {
        if (savedConversations_ == null) {
          savedConversations_ = new global::D3.Hero.SavedConversations();
        }
        SavedConversations.MergeFrom(other.SavedConversations);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastChallengeRewardEarned = input.ReadUInt32();
            break;
          }
          case 16: {
            LastChallengeTried = input.ReadUInt32();
            break;
          }
          case 26: {
            if (savedConversations_ == null) {
              savedConversations_ = new global::D3.Hero.SavedConversations();
            }
            input.ReadMessage(savedConversations_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
