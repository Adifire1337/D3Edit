// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HeroCommon.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D3.Hero {

  /// <summary>Holder for reflection information generated from HeroCommon.proto</summary>
  public static partial class HeroCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for HeroCommon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeroCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBIZXJvQ29tbW9uLnByb3RvEgdEMy5IZXJvIlwKClZpc3VhbEl0ZW0SDAoE",
            "Z2JpZBgBIAEoDxIQCghkeWVfdHlwZRgCIAEoERIYChBpdGVtX2VmZmVjdF90",
            "eXBlGAMgASgREhQKDGVmZmVjdF9sZXZlbBgEIAEoESIiChJWaXN1YWxDb3Nt",
            "ZXRpY0l0ZW0SDAoEZ2JpZBgBIAEoDyJvCg9WaXN1YWxFcXVpcG1lbnQSKAoL",
            "dmlzdWFsX2l0ZW0YASADKAsyEy5EMy5IZXJvLlZpc3VhbEl0ZW0SMgoNY29z",
            "bWV0aWNfaXRlbRgCIAMoCzIbLkQzLkhlcm8uVmlzdWFsQ29zbWV0aWNJdGVt",
            "ImgKEVF1ZXN0SGlzdG9yeUVudHJ5EhEKCXNub19xdWVzdBgBIAEoDxIdChVk",
            "aWZmaWN1bHR5X2RlcHJlY2F0ZWQYAiABKBESIQoZaGlnaGVzdF9wbGF5ZWRf",
            "cXVlc3Rfc3RlcBgDIAEoESJ3ChdRdWVzdFJld2FyZEhpc3RvcnlFbnRyeRIR",
            "Cglzbm9fcXVlc3QYASABKA8SEAoIc3RlcF91aWQYAiABKBESHQoVZGlmZmlj",
            "dWx0eV9kZXByZWNhdGVkGAMgASgREhgKEGRpZmZpY3VsdHlfZmxhZ3MYBCAB",
            "KA0ikgEKClNhdmVkUXVlc3QSEQoJc25vX3F1ZXN0GAEgASgPEh0KFWRpZmZp",
            "Y3VsdHlfZGVwcmVjYXRlZBgCIAEoERIYChBjdXJyZW50X3N0ZXBfdWlkGAMg",
            "ASgREhcKD29iamVjdGl2ZV9zdGF0ZRgEIAMoERIfChdmYWlsdXJlX2NvbmRp",
            "dGlvbl9zdGF0ZRgFIAMoESKrAQoSU2F2ZWRDb252ZXJzYXRpb25zEiUKHXBs",
            "YXllZF9jb252ZXJzYXRpb25zX2JpdGZpZWxkGAEgASgMEh8KF3Nub19zYXZl",
            "ZF9jb252ZXJzYXRpb25zGAIgAygPEigKIHNub19zYXZlZF9jb252ZXJzYXRp",
            "b25zX2JpdGZpZWxkGAMgASgMEiMKG2JpdGZpZWxkX2xlYWRpbmdfbnVsbF9i",
            "eXRlcxgEIAEoBSJaChNTYXZlUG9pbnREYXRhX1Byb3RvEhEKCXNub193b3Js",
            "ZBgBIAEoDxIYChBzYXZlcG9pbnRfbnVtYmVyGAIgASgREhYKDmNyZWF0ZXNf",
            "cG9ydGFsGAMgASgNIjUKDVNraWxsV2l0aFJ1bmUSEQoJc25vX3NraWxsGAEg",
            "ASgPEhEKCXJ1bmVfdHlwZRgCIAEoESIlCg1TYXZlZEl0ZW1MaW5rEgkKAXgY",
            "ASABKBESCQoBeRgCIAEoESI2CgpUaW1lc3RhbXBzEhMKC2NyZWF0ZV90aW1l",
            "GAEgASgSEhMKC2RlbGV0ZV90aW1lGAIgASgSIhgKCE5hbWVUZXh0EgwKBG5h",
            "bWUYASABKAkiRQoQUXVlc3RIaXN0b3J5TGlzdBIxCg1xdWVzdF9oaXN0b3J5",
            "GAEgAygLMhouRDMuSGVyby5RdWVzdEhpc3RvcnlFbnRyeSI7Cg5TYXZlZFF1",
            "ZXN0TGlzdBIpCgxzYXZlZF9xdWVzdHMYASADKAsyEy5EMy5IZXJvLlNhdmVk",
            "UXVlc3QiWAoWUXVlc3RSZXdhcmRIaXN0b3J5TGlzdBI+ChRxdWVzdF9yZXdh",
            "cmRfaGlzdG9yeRgBIAMoCzIgLkQzLkhlcm8uUXVlc3RSZXdhcmRIaXN0b3J5",
            "RW50cnkiOAoLTG9hZG91dEl0ZW0SEwoLaXRlbV9pZF9sb3cYASABKBASFAoM",
            "Z2JpZF9zb2NrZXRzGAIgAygPIjkKDUxvYWRvdXRQb3Rpb24SEwoLaXRlbV9p",
            "ZF9sb3cYASABKBASEwoLZ2JpZF9wb3Rpb24YAiABKA8i6gEKB0xvYWRvdXQS",
            "LAoOZXF1aXBwZWRfaXRlbXMYASADKAsyFC5EMy5IZXJvLkxvYWRvdXRJdGVt",
            "Ei0KDWFjdGl2ZV9za2lsbHMYAiADKAsyFi5EMy5IZXJvLlNraWxsV2l0aFJ1",
            "bmUSEgoKc25vX3RyYWl0cxgDIAMoDxIdChVnYmlkX2xlZ2VuZGFyeV9wb3dl",
            "cnMYBCADKA8SDAoEbmFtZRgFIAEoCRIQCgh0YWJfaWNvbhgGIAEoERIvCg9l",
            "cXVpcHBlZF9wb3Rpb24YByABKAsyFi5EMy5IZXJvLkxvYWRvdXRQb3Rpb24i",
            "OgoURXF1aXBtZW50TWFuYWdlckRhdGESIgoIbG9hZG91dHMYASADKAsyEC5E",
            "My5IZXJvLkxvYWRvdXRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.VisualItem), global::D3.Hero.VisualItem.Parser, new[]{ "Gbid", "DyeType", "ItemEffectType", "EffectLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.VisualCosmeticItem), global::D3.Hero.VisualCosmeticItem.Parser, new[]{ "Gbid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.VisualEquipment), global::D3.Hero.VisualEquipment.Parser, new[]{ "VisualItem", "CosmeticItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.QuestHistoryEntry), global::D3.Hero.QuestHistoryEntry.Parser, new[]{ "SnoQuest", "DifficultyDeprecated", "HighestPlayedQuestStep" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.QuestRewardHistoryEntry), global::D3.Hero.QuestRewardHistoryEntry.Parser, new[]{ "SnoQuest", "StepUid", "DifficultyDeprecated", "DifficultyFlags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.SavedQuest), global::D3.Hero.SavedQuest.Parser, new[]{ "SnoQuest", "DifficultyDeprecated", "CurrentStepUid", "ObjectiveState", "FailureConditionState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.SavedConversations), global::D3.Hero.SavedConversations.Parser, new[]{ "PlayedConversationsBitfield", "SnoSavedConversations", "SnoSavedConversationsBitfield", "BitfieldLeadingNullBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.SavePointData_Proto), global::D3.Hero.SavePointData_Proto.Parser, new[]{ "SnoWorld", "SavepointNumber", "CreatesPortal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.SkillWithRune), global::D3.Hero.SkillWithRune.Parser, new[]{ "SnoSkill", "RuneType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.SavedItemLink), global::D3.Hero.SavedItemLink.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.Timestamps), global::D3.Hero.Timestamps.Parser, new[]{ "CreateTime", "DeleteTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.NameText), global::D3.Hero.NameText.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.QuestHistoryList), global::D3.Hero.QuestHistoryList.Parser, new[]{ "QuestHistory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.SavedQuestList), global::D3.Hero.SavedQuestList.Parser, new[]{ "SavedQuests" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.QuestRewardHistoryList), global::D3.Hero.QuestRewardHistoryList.Parser, new[]{ "QuestRewardHistory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.LoadoutItem), global::D3.Hero.LoadoutItem.Parser, new[]{ "ItemIdLow", "GbidSockets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.LoadoutPotion), global::D3.Hero.LoadoutPotion.Parser, new[]{ "ItemIdLow", "GbidPotion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.Loadout), global::D3.Hero.Loadout.Parser, new[]{ "EquippedItems", "ActiveSkills", "SnoTraits", "GbidLegendaryPowers", "Name", "TabIcon", "EquippedPotion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D3.Hero.EquipmentManagerData), global::D3.Hero.EquipmentManagerData.Parser, new[]{ "Loadouts" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VisualItem : pb::IMessage<VisualItem> {
    private static readonly pb::MessageParser<VisualItem> _parser = new pb::MessageParser<VisualItem>(() => new VisualItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VisualItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualItem(VisualItem other) : this() {
      gbid_ = other.gbid_;
      dyeType_ = other.dyeType_;
      itemEffectType_ = other.itemEffectType_;
      effectLevel_ = other.effectLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualItem Clone() {
      return new VisualItem(this);
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 1;
    private int gbid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gbid {
      get { return gbid_; }
      set {
        gbid_ = value;
      }
    }

    /// <summary>Field number for the "dye_type" field.</summary>
    public const int DyeTypeFieldNumber = 2;
    private int dyeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DyeType {
      get { return dyeType_; }
      set {
        dyeType_ = value;
      }
    }

    /// <summary>Field number for the "item_effect_type" field.</summary>
    public const int ItemEffectTypeFieldNumber = 3;
    private int itemEffectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemEffectType {
      get { return itemEffectType_; }
      set {
        itemEffectType_ = value;
      }
    }

    /// <summary>Field number for the "effect_level" field.</summary>
    public const int EffectLevelFieldNumber = 4;
    private int effectLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EffectLevel {
      get { return effectLevel_; }
      set {
        effectLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VisualItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VisualItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gbid != other.Gbid) return false;
      if (DyeType != other.DyeType) return false;
      if (ItemEffectType != other.ItemEffectType) return false;
      if (EffectLevel != other.EffectLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gbid != 0) hash ^= Gbid.GetHashCode();
      if (DyeType != 0) hash ^= DyeType.GetHashCode();
      if (ItemEffectType != 0) hash ^= ItemEffectType.GetHashCode();
      if (EffectLevel != 0) hash ^= EffectLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gbid != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(Gbid);
      }
      if (DyeType != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(DyeType);
      }
      if (ItemEffectType != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(ItemEffectType);
      }
      if (EffectLevel != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(EffectLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gbid != 0) {
        size += 1 + 4;
      }
      if (DyeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DyeType);
      }
      if (ItemEffectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ItemEffectType);
      }
      if (EffectLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(EffectLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VisualItem other) {
      if (other == null) {
        return;
      }
      if (other.Gbid != 0) {
        Gbid = other.Gbid;
      }
      if (other.DyeType != 0) {
        DyeType = other.DyeType;
      }
      if (other.ItemEffectType != 0) {
        ItemEffectType = other.ItemEffectType;
      }
      if (other.EffectLevel != 0) {
        EffectLevel = other.EffectLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Gbid = input.ReadSFixed32();
            break;
          }
          case 16: {
            DyeType = input.ReadSInt32();
            break;
          }
          case 24: {
            ItemEffectType = input.ReadSInt32();
            break;
          }
          case 32: {
            EffectLevel = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VisualCosmeticItem : pb::IMessage<VisualCosmeticItem> {
    private static readonly pb::MessageParser<VisualCosmeticItem> _parser = new pb::MessageParser<VisualCosmeticItem>(() => new VisualCosmeticItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VisualCosmeticItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualCosmeticItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualCosmeticItem(VisualCosmeticItem other) : this() {
      gbid_ = other.gbid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualCosmeticItem Clone() {
      return new VisualCosmeticItem(this);
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 1;
    private int gbid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gbid {
      get { return gbid_; }
      set {
        gbid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VisualCosmeticItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VisualCosmeticItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gbid != other.Gbid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gbid != 0) hash ^= Gbid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gbid != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(Gbid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gbid != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VisualCosmeticItem other) {
      if (other == null) {
        return;
      }
      if (other.Gbid != 0) {
        Gbid = other.Gbid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Gbid = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VisualEquipment : pb::IMessage<VisualEquipment> {
    private static readonly pb::MessageParser<VisualEquipment> _parser = new pb::MessageParser<VisualEquipment>(() => new VisualEquipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VisualEquipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualEquipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualEquipment(VisualEquipment other) : this() {
      visualItem_ = other.visualItem_.Clone();
      cosmeticItem_ = other.cosmeticItem_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisualEquipment Clone() {
      return new VisualEquipment(this);
    }

    /// <summary>Field number for the "visual_item" field.</summary>
    public const int VisualItemFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.Hero.VisualItem> _repeated_visualItem_codec
        = pb::FieldCodec.ForMessage(10, global::D3.Hero.VisualItem.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.VisualItem> visualItem_ = new pbc::RepeatedField<global::D3.Hero.VisualItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.VisualItem> VisualItem {
      get { return visualItem_; }
    }

    /// <summary>Field number for the "cosmetic_item" field.</summary>
    public const int CosmeticItemFieldNumber = 2;
    private static readonly pb::FieldCodec<global::D3.Hero.VisualCosmeticItem> _repeated_cosmeticItem_codec
        = pb::FieldCodec.ForMessage(18, global::D3.Hero.VisualCosmeticItem.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.VisualCosmeticItem> cosmeticItem_ = new pbc::RepeatedField<global::D3.Hero.VisualCosmeticItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.VisualCosmeticItem> CosmeticItem {
      get { return cosmeticItem_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VisualEquipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VisualEquipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!visualItem_.Equals(other.visualItem_)) return false;
      if(!cosmeticItem_.Equals(other.cosmeticItem_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= visualItem_.GetHashCode();
      hash ^= cosmeticItem_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      visualItem_.WriteTo(output, _repeated_visualItem_codec);
      cosmeticItem_.WriteTo(output, _repeated_cosmeticItem_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += visualItem_.CalculateSize(_repeated_visualItem_codec);
      size += cosmeticItem_.CalculateSize(_repeated_cosmeticItem_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VisualEquipment other) {
      if (other == null) {
        return;
      }
      visualItem_.Add(other.visualItem_);
      cosmeticItem_.Add(other.cosmeticItem_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            visualItem_.AddEntriesFrom(input, _repeated_visualItem_codec);
            break;
          }
          case 18: {
            cosmeticItem_.AddEntriesFrom(input, _repeated_cosmeticItem_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuestHistoryEntry : pb::IMessage<QuestHistoryEntry> {
    private static readonly pb::MessageParser<QuestHistoryEntry> _parser = new pb::MessageParser<QuestHistoryEntry>(() => new QuestHistoryEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestHistoryEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestHistoryEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestHistoryEntry(QuestHistoryEntry other) : this() {
      snoQuest_ = other.snoQuest_;
      difficultyDeprecated_ = other.difficultyDeprecated_;
      highestPlayedQuestStep_ = other.highestPlayedQuestStep_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestHistoryEntry Clone() {
      return new QuestHistoryEntry(this);
    }

    /// <summary>Field number for the "sno_quest" field.</summary>
    public const int SnoQuestFieldNumber = 1;
    private int snoQuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SnoQuest {
      get { return snoQuest_; }
      set {
        snoQuest_ = value;
      }
    }

    /// <summary>Field number for the "difficulty_deprecated" field.</summary>
    public const int DifficultyDeprecatedFieldNumber = 2;
    private int difficultyDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DifficultyDeprecated {
      get { return difficultyDeprecated_; }
      set {
        difficultyDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "highest_played_quest_step" field.</summary>
    public const int HighestPlayedQuestStepFieldNumber = 3;
    private int highestPlayedQuestStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HighestPlayedQuestStep {
      get { return highestPlayedQuestStep_; }
      set {
        highestPlayedQuestStep_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestHistoryEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestHistoryEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnoQuest != other.SnoQuest) return false;
      if (DifficultyDeprecated != other.DifficultyDeprecated) return false;
      if (HighestPlayedQuestStep != other.HighestPlayedQuestStep) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnoQuest != 0) hash ^= SnoQuest.GetHashCode();
      if (DifficultyDeprecated != 0) hash ^= DifficultyDeprecated.GetHashCode();
      if (HighestPlayedQuestStep != 0) hash ^= HighestPlayedQuestStep.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnoQuest != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(SnoQuest);
      }
      if (DifficultyDeprecated != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(DifficultyDeprecated);
      }
      if (HighestPlayedQuestStep != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(HighestPlayedQuestStep);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnoQuest != 0) {
        size += 1 + 4;
      }
      if (DifficultyDeprecated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DifficultyDeprecated);
      }
      if (HighestPlayedQuestStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(HighestPlayedQuestStep);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestHistoryEntry other) {
      if (other == null) {
        return;
      }
      if (other.SnoQuest != 0) {
        SnoQuest = other.SnoQuest;
      }
      if (other.DifficultyDeprecated != 0) {
        DifficultyDeprecated = other.DifficultyDeprecated;
      }
      if (other.HighestPlayedQuestStep != 0) {
        HighestPlayedQuestStep = other.HighestPlayedQuestStep;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SnoQuest = input.ReadSFixed32();
            break;
          }
          case 16: {
            DifficultyDeprecated = input.ReadSInt32();
            break;
          }
          case 24: {
            HighestPlayedQuestStep = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuestRewardHistoryEntry : pb::IMessage<QuestRewardHistoryEntry> {
    private static readonly pb::MessageParser<QuestRewardHistoryEntry> _parser = new pb::MessageParser<QuestRewardHistoryEntry>(() => new QuestRewardHistoryEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestRewardHistoryEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestRewardHistoryEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestRewardHistoryEntry(QuestRewardHistoryEntry other) : this() {
      snoQuest_ = other.snoQuest_;
      stepUid_ = other.stepUid_;
      difficultyDeprecated_ = other.difficultyDeprecated_;
      difficultyFlags_ = other.difficultyFlags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestRewardHistoryEntry Clone() {
      return new QuestRewardHistoryEntry(this);
    }

    /// <summary>Field number for the "sno_quest" field.</summary>
    public const int SnoQuestFieldNumber = 1;
    private int snoQuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SnoQuest {
      get { return snoQuest_; }
      set {
        snoQuest_ = value;
      }
    }

    /// <summary>Field number for the "step_uid" field.</summary>
    public const int StepUidFieldNumber = 2;
    private int stepUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StepUid {
      get { return stepUid_; }
      set {
        stepUid_ = value;
      }
    }

    /// <summary>Field number for the "difficulty_deprecated" field.</summary>
    public const int DifficultyDeprecatedFieldNumber = 3;
    private int difficultyDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DifficultyDeprecated {
      get { return difficultyDeprecated_; }
      set {
        difficultyDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "difficulty_flags" field.</summary>
    public const int DifficultyFlagsFieldNumber = 4;
    private uint difficultyFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DifficultyFlags {
      get { return difficultyFlags_; }
      set {
        difficultyFlags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestRewardHistoryEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestRewardHistoryEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnoQuest != other.SnoQuest) return false;
      if (StepUid != other.StepUid) return false;
      if (DifficultyDeprecated != other.DifficultyDeprecated) return false;
      if (DifficultyFlags != other.DifficultyFlags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnoQuest != 0) hash ^= SnoQuest.GetHashCode();
      if (StepUid != 0) hash ^= StepUid.GetHashCode();
      if (DifficultyDeprecated != 0) hash ^= DifficultyDeprecated.GetHashCode();
      if (DifficultyFlags != 0) hash ^= DifficultyFlags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnoQuest != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(SnoQuest);
      }
      if (StepUid != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(StepUid);
      }
      if (DifficultyDeprecated != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(DifficultyDeprecated);
      }
      if (DifficultyFlags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DifficultyFlags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnoQuest != 0) {
        size += 1 + 4;
      }
      if (StepUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(StepUid);
      }
      if (DifficultyDeprecated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DifficultyDeprecated);
      }
      if (DifficultyFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DifficultyFlags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestRewardHistoryEntry other) {
      if (other == null) {
        return;
      }
      if (other.SnoQuest != 0) {
        SnoQuest = other.SnoQuest;
      }
      if (other.StepUid != 0) {
        StepUid = other.StepUid;
      }
      if (other.DifficultyDeprecated != 0) {
        DifficultyDeprecated = other.DifficultyDeprecated;
      }
      if (other.DifficultyFlags != 0) {
        DifficultyFlags = other.DifficultyFlags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SnoQuest = input.ReadSFixed32();
            break;
          }
          case 16: {
            StepUid = input.ReadSInt32();
            break;
          }
          case 24: {
            DifficultyDeprecated = input.ReadSInt32();
            break;
          }
          case 32: {
            DifficultyFlags = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SavedQuest : pb::IMessage<SavedQuest> {
    private static readonly pb::MessageParser<SavedQuest> _parser = new pb::MessageParser<SavedQuest>(() => new SavedQuest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavedQuest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedQuest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedQuest(SavedQuest other) : this() {
      snoQuest_ = other.snoQuest_;
      difficultyDeprecated_ = other.difficultyDeprecated_;
      currentStepUid_ = other.currentStepUid_;
      objectiveState_ = other.objectiveState_.Clone();
      failureConditionState_ = other.failureConditionState_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedQuest Clone() {
      return new SavedQuest(this);
    }

    /// <summary>Field number for the "sno_quest" field.</summary>
    public const int SnoQuestFieldNumber = 1;
    private int snoQuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SnoQuest {
      get { return snoQuest_; }
      set {
        snoQuest_ = value;
      }
    }

    /// <summary>Field number for the "difficulty_deprecated" field.</summary>
    public const int DifficultyDeprecatedFieldNumber = 2;
    private int difficultyDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DifficultyDeprecated {
      get { return difficultyDeprecated_; }
      set {
        difficultyDeprecated_ = value;
      }
    }

    /// <summary>Field number for the "current_step_uid" field.</summary>
    public const int CurrentStepUidFieldNumber = 3;
    private int currentStepUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentStepUid {
      get { return currentStepUid_; }
      set {
        currentStepUid_ = value;
      }
    }

    /// <summary>Field number for the "objective_state" field.</summary>
    public const int ObjectiveStateFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_objectiveState_codec
        = pb::FieldCodec.ForSInt32(34);
    private readonly pbc::RepeatedField<int> objectiveState_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ObjectiveState {
      get { return objectiveState_; }
    }

    /// <summary>Field number for the "failure_condition_state" field.</summary>
    public const int FailureConditionStateFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_failureConditionState_codec
        = pb::FieldCodec.ForSInt32(42);
    private readonly pbc::RepeatedField<int> failureConditionState_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FailureConditionState {
      get { return failureConditionState_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavedQuest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavedQuest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnoQuest != other.SnoQuest) return false;
      if (DifficultyDeprecated != other.DifficultyDeprecated) return false;
      if (CurrentStepUid != other.CurrentStepUid) return false;
      if(!objectiveState_.Equals(other.objectiveState_)) return false;
      if(!failureConditionState_.Equals(other.failureConditionState_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnoQuest != 0) hash ^= SnoQuest.GetHashCode();
      if (DifficultyDeprecated != 0) hash ^= DifficultyDeprecated.GetHashCode();
      if (CurrentStepUid != 0) hash ^= CurrentStepUid.GetHashCode();
      hash ^= objectiveState_.GetHashCode();
      hash ^= failureConditionState_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnoQuest != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(SnoQuest);
      }
      if (DifficultyDeprecated != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(DifficultyDeprecated);
      }
      if (CurrentStepUid != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(CurrentStepUid);
      }
      objectiveState_.WriteTo(output, _repeated_objectiveState_codec);
      failureConditionState_.WriteTo(output, _repeated_failureConditionState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnoQuest != 0) {
        size += 1 + 4;
      }
      if (DifficultyDeprecated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DifficultyDeprecated);
      }
      if (CurrentStepUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CurrentStepUid);
      }
      size += objectiveState_.CalculateSize(_repeated_objectiveState_codec);
      size += failureConditionState_.CalculateSize(_repeated_failureConditionState_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavedQuest other) {
      if (other == null) {
        return;
      }
      if (other.SnoQuest != 0) {
        SnoQuest = other.SnoQuest;
      }
      if (other.DifficultyDeprecated != 0) {
        DifficultyDeprecated = other.DifficultyDeprecated;
      }
      if (other.CurrentStepUid != 0) {
        CurrentStepUid = other.CurrentStepUid;
      }
      objectiveState_.Add(other.objectiveState_);
      failureConditionState_.Add(other.failureConditionState_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SnoQuest = input.ReadSFixed32();
            break;
          }
          case 16: {
            DifficultyDeprecated = input.ReadSInt32();
            break;
          }
          case 24: {
            CurrentStepUid = input.ReadSInt32();
            break;
          }
          case 34:
          case 32: {
            objectiveState_.AddEntriesFrom(input, _repeated_objectiveState_codec);
            break;
          }
          case 42:
          case 40: {
            failureConditionState_.AddEntriesFrom(input, _repeated_failureConditionState_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SavedConversations : pb::IMessage<SavedConversations> {
    private static readonly pb::MessageParser<SavedConversations> _parser = new pb::MessageParser<SavedConversations>(() => new SavedConversations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavedConversations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedConversations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedConversations(SavedConversations other) : this() {
      playedConversationsBitfield_ = other.playedConversationsBitfield_;
      snoSavedConversations_ = other.snoSavedConversations_.Clone();
      snoSavedConversationsBitfield_ = other.snoSavedConversationsBitfield_;
      bitfieldLeadingNullBytes_ = other.bitfieldLeadingNullBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedConversations Clone() {
      return new SavedConversations(this);
    }

    /// <summary>Field number for the "played_conversations_bitfield" field.</summary>
    public const int PlayedConversationsBitfieldFieldNumber = 1;
    private pb::ByteString playedConversationsBitfield_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PlayedConversationsBitfield {
      get { return playedConversationsBitfield_; }
      set {
        playedConversationsBitfield_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sno_saved_conversations" field.</summary>
    public const int SnoSavedConversationsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_snoSavedConversations_codec
        = pb::FieldCodec.ForSFixed32(18);
    private readonly pbc::RepeatedField<int> snoSavedConversations_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SnoSavedConversations {
      get { return snoSavedConversations_; }
    }

    /// <summary>Field number for the "sno_saved_conversations_bitfield" field.</summary>
    public const int SnoSavedConversationsBitfieldFieldNumber = 3;
    private pb::ByteString snoSavedConversationsBitfield_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SnoSavedConversationsBitfield {
      get { return snoSavedConversationsBitfield_; }
      set {
        snoSavedConversationsBitfield_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bitfield_leading_null_bytes" field.</summary>
    public const int BitfieldLeadingNullBytesFieldNumber = 4;
    private int bitfieldLeadingNullBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BitfieldLeadingNullBytes {
      get { return bitfieldLeadingNullBytes_; }
      set {
        bitfieldLeadingNullBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavedConversations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavedConversations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayedConversationsBitfield != other.PlayedConversationsBitfield) return false;
      if(!snoSavedConversations_.Equals(other.snoSavedConversations_)) return false;
      if (SnoSavedConversationsBitfield != other.SnoSavedConversationsBitfield) return false;
      if (BitfieldLeadingNullBytes != other.BitfieldLeadingNullBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayedConversationsBitfield.Length != 0) hash ^= PlayedConversationsBitfield.GetHashCode();
      hash ^= snoSavedConversations_.GetHashCode();
      if (SnoSavedConversationsBitfield.Length != 0) hash ^= SnoSavedConversationsBitfield.GetHashCode();
      if (BitfieldLeadingNullBytes != 0) hash ^= BitfieldLeadingNullBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayedConversationsBitfield.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PlayedConversationsBitfield);
      }
      snoSavedConversations_.WriteTo(output, _repeated_snoSavedConversations_codec);
      if (SnoSavedConversationsBitfield.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SnoSavedConversationsBitfield);
      }
      if (BitfieldLeadingNullBytes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BitfieldLeadingNullBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayedConversationsBitfield.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PlayedConversationsBitfield);
      }
      size += snoSavedConversations_.CalculateSize(_repeated_snoSavedConversations_codec);
      if (SnoSavedConversationsBitfield.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SnoSavedConversationsBitfield);
      }
      if (BitfieldLeadingNullBytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitfieldLeadingNullBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavedConversations other) {
      if (other == null) {
        return;
      }
      if (other.PlayedConversationsBitfield.Length != 0) {
        PlayedConversationsBitfield = other.PlayedConversationsBitfield;
      }
      snoSavedConversations_.Add(other.snoSavedConversations_);
      if (other.SnoSavedConversationsBitfield.Length != 0) {
        SnoSavedConversationsBitfield = other.SnoSavedConversationsBitfield;
      }
      if (other.BitfieldLeadingNullBytes != 0) {
        BitfieldLeadingNullBytes = other.BitfieldLeadingNullBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayedConversationsBitfield = input.ReadBytes();
            break;
          }
          case 18:
          case 21: {
            snoSavedConversations_.AddEntriesFrom(input, _repeated_snoSavedConversations_codec);
            break;
          }
          case 26: {
            SnoSavedConversationsBitfield = input.ReadBytes();
            break;
          }
          case 32: {
            BitfieldLeadingNullBytes = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SavePointData_Proto : pb::IMessage<SavePointData_Proto> {
    private static readonly pb::MessageParser<SavePointData_Proto> _parser = new pb::MessageParser<SavePointData_Proto>(() => new SavePointData_Proto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavePointData_Proto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePointData_Proto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePointData_Proto(SavePointData_Proto other) : this() {
      snoWorld_ = other.snoWorld_;
      savepointNumber_ = other.savepointNumber_;
      createsPortal_ = other.createsPortal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePointData_Proto Clone() {
      return new SavePointData_Proto(this);
    }

    /// <summary>Field number for the "sno_world" field.</summary>
    public const int SnoWorldFieldNumber = 1;
    private int snoWorld_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SnoWorld {
      get { return snoWorld_; }
      set {
        snoWorld_ = value;
      }
    }

    /// <summary>Field number for the "savepoint_number" field.</summary>
    public const int SavepointNumberFieldNumber = 2;
    private int savepointNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SavepointNumber {
      get { return savepointNumber_; }
      set {
        savepointNumber_ = value;
      }
    }

    /// <summary>Field number for the "creates_portal" field.</summary>
    public const int CreatesPortalFieldNumber = 3;
    private uint createsPortal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CreatesPortal {
      get { return createsPortal_; }
      set {
        createsPortal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavePointData_Proto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavePointData_Proto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnoWorld != other.SnoWorld) return false;
      if (SavepointNumber != other.SavepointNumber) return false;
      if (CreatesPortal != other.CreatesPortal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnoWorld != 0) hash ^= SnoWorld.GetHashCode();
      if (SavepointNumber != 0) hash ^= SavepointNumber.GetHashCode();
      if (CreatesPortal != 0) hash ^= CreatesPortal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnoWorld != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(SnoWorld);
      }
      if (SavepointNumber != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(SavepointNumber);
      }
      if (CreatesPortal != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CreatesPortal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnoWorld != 0) {
        size += 1 + 4;
      }
      if (SavepointNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SavepointNumber);
      }
      if (CreatesPortal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatesPortal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavePointData_Proto other) {
      if (other == null) {
        return;
      }
      if (other.SnoWorld != 0) {
        SnoWorld = other.SnoWorld;
      }
      if (other.SavepointNumber != 0) {
        SavepointNumber = other.SavepointNumber;
      }
      if (other.CreatesPortal != 0) {
        CreatesPortal = other.CreatesPortal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SnoWorld = input.ReadSFixed32();
            break;
          }
          case 16: {
            SavepointNumber = input.ReadSInt32();
            break;
          }
          case 24: {
            CreatesPortal = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillWithRune : pb::IMessage<SkillWithRune> {
    private static readonly pb::MessageParser<SkillWithRune> _parser = new pb::MessageParser<SkillWithRune>(() => new SkillWithRune());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillWithRune> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillWithRune() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillWithRune(SkillWithRune other) : this() {
      snoSkill_ = other.snoSkill_;
      runeType_ = other.runeType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillWithRune Clone() {
      return new SkillWithRune(this);
    }

    /// <summary>Field number for the "sno_skill" field.</summary>
    public const int SnoSkillFieldNumber = 1;
    private int snoSkill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SnoSkill {
      get { return snoSkill_; }
      set {
        snoSkill_ = value;
      }
    }

    /// <summary>Field number for the "rune_type" field.</summary>
    public const int RuneTypeFieldNumber = 2;
    private int runeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RuneType {
      get { return runeType_; }
      set {
        runeType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillWithRune);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillWithRune other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnoSkill != other.SnoSkill) return false;
      if (RuneType != other.RuneType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnoSkill != 0) hash ^= SnoSkill.GetHashCode();
      if (RuneType != 0) hash ^= RuneType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnoSkill != 0) {
        output.WriteRawTag(13);
        output.WriteSFixed32(SnoSkill);
      }
      if (RuneType != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(RuneType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnoSkill != 0) {
        size += 1 + 4;
      }
      if (RuneType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(RuneType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillWithRune other) {
      if (other == null) {
        return;
      }
      if (other.SnoSkill != 0) {
        SnoSkill = other.SnoSkill;
      }
      if (other.RuneType != 0) {
        RuneType = other.RuneType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            SnoSkill = input.ReadSFixed32();
            break;
          }
          case 16: {
            RuneType = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SavedItemLink : pb::IMessage<SavedItemLink> {
    private static readonly pb::MessageParser<SavedItemLink> _parser = new pb::MessageParser<SavedItemLink>(() => new SavedItemLink());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavedItemLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedItemLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedItemLink(SavedItemLink other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedItemLink Clone() {
      return new SavedItemLink(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavedItemLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavedItemLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavedItemLink other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadSInt32();
            break;
          }
          case 16: {
            Y = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Timestamps : pb::IMessage<Timestamps> {
    private static readonly pb::MessageParser<Timestamps> _parser = new pb::MessageParser<Timestamps>(() => new Timestamps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Timestamps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamps(Timestamps other) : this() {
      createTime_ = other.createTime_;
      deleteTime_ = other.deleteTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamps Clone() {
      return new Timestamps(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "delete_time" field.</summary>
    public const int DeleteTimeFieldNumber = 2;
    private long deleteTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Timestamps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Timestamps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreateTime != other.CreateTime) return false;
      if (DeleteTime != other.DeleteTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (DeleteTime != 0L) hash ^= DeleteTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreateTime != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(CreateTime);
      }
      if (DeleteTime != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(DeleteTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CreateTime);
      }
      if (DeleteTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(DeleteTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Timestamps other) {
      if (other == null) {
        return;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.DeleteTime != 0L) {
        DeleteTime = other.DeleteTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreateTime = input.ReadSInt64();
            break;
          }
          case 16: {
            DeleteTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NameText : pb::IMessage<NameText> {
    private static readonly pb::MessageParser<NameText> _parser = new pb::MessageParser<NameText>(() => new NameText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NameText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameText(NameText other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameText Clone() {
      return new NameText(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NameText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NameText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NameText other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuestHistoryList : pb::IMessage<QuestHistoryList> {
    private static readonly pb::MessageParser<QuestHistoryList> _parser = new pb::MessageParser<QuestHistoryList>(() => new QuestHistoryList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestHistoryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestHistoryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestHistoryList(QuestHistoryList other) : this() {
      questHistory_ = other.questHistory_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestHistoryList Clone() {
      return new QuestHistoryList(this);
    }

    /// <summary>Field number for the "quest_history" field.</summary>
    public const int QuestHistoryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.Hero.QuestHistoryEntry> _repeated_questHistory_codec
        = pb::FieldCodec.ForMessage(10, global::D3.Hero.QuestHistoryEntry.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.QuestHistoryEntry> questHistory_ = new pbc::RepeatedField<global::D3.Hero.QuestHistoryEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.QuestHistoryEntry> QuestHistory {
      get { return questHistory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestHistoryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestHistoryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!questHistory_.Equals(other.questHistory_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= questHistory_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      questHistory_.WriteTo(output, _repeated_questHistory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += questHistory_.CalculateSize(_repeated_questHistory_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestHistoryList other) {
      if (other == null) {
        return;
      }
      questHistory_.Add(other.questHistory_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            questHistory_.AddEntriesFrom(input, _repeated_questHistory_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SavedQuestList : pb::IMessage<SavedQuestList> {
    private static readonly pb::MessageParser<SavedQuestList> _parser = new pb::MessageParser<SavedQuestList>(() => new SavedQuestList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavedQuestList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedQuestList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedQuestList(SavedQuestList other) : this() {
      savedQuests_ = other.savedQuests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavedQuestList Clone() {
      return new SavedQuestList(this);
    }

    /// <summary>Field number for the "saved_quests" field.</summary>
    public const int SavedQuestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.Hero.SavedQuest> _repeated_savedQuests_codec
        = pb::FieldCodec.ForMessage(10, global::D3.Hero.SavedQuest.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.SavedQuest> savedQuests_ = new pbc::RepeatedField<global::D3.Hero.SavedQuest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.SavedQuest> SavedQuests {
      get { return savedQuests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavedQuestList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavedQuestList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!savedQuests_.Equals(other.savedQuests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= savedQuests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      savedQuests_.WriteTo(output, _repeated_savedQuests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += savedQuests_.CalculateSize(_repeated_savedQuests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavedQuestList other) {
      if (other == null) {
        return;
      }
      savedQuests_.Add(other.savedQuests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            savedQuests_.AddEntriesFrom(input, _repeated_savedQuests_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuestRewardHistoryList : pb::IMessage<QuestRewardHistoryList> {
    private static readonly pb::MessageParser<QuestRewardHistoryList> _parser = new pb::MessageParser<QuestRewardHistoryList>(() => new QuestRewardHistoryList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestRewardHistoryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestRewardHistoryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestRewardHistoryList(QuestRewardHistoryList other) : this() {
      questRewardHistory_ = other.questRewardHistory_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestRewardHistoryList Clone() {
      return new QuestRewardHistoryList(this);
    }

    /// <summary>Field number for the "quest_reward_history" field.</summary>
    public const int QuestRewardHistoryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.Hero.QuestRewardHistoryEntry> _repeated_questRewardHistory_codec
        = pb::FieldCodec.ForMessage(10, global::D3.Hero.QuestRewardHistoryEntry.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.QuestRewardHistoryEntry> questRewardHistory_ = new pbc::RepeatedField<global::D3.Hero.QuestRewardHistoryEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.QuestRewardHistoryEntry> QuestRewardHistory {
      get { return questRewardHistory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestRewardHistoryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestRewardHistoryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!questRewardHistory_.Equals(other.questRewardHistory_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= questRewardHistory_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      questRewardHistory_.WriteTo(output, _repeated_questRewardHistory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += questRewardHistory_.CalculateSize(_repeated_questRewardHistory_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestRewardHistoryList other) {
      if (other == null) {
        return;
      }
      questRewardHistory_.Add(other.questRewardHistory_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            questRewardHistory_.AddEntriesFrom(input, _repeated_questRewardHistory_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadoutItem : pb::IMessage<LoadoutItem> {
    private static readonly pb::MessageParser<LoadoutItem> _parser = new pb::MessageParser<LoadoutItem>(() => new LoadoutItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadoutItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadoutItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadoutItem(LoadoutItem other) : this() {
      itemIdLow_ = other.itemIdLow_;
      gbidSockets_ = other.gbidSockets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadoutItem Clone() {
      return new LoadoutItem(this);
    }

    /// <summary>Field number for the "item_id_low" field.</summary>
    public const int ItemIdLowFieldNumber = 1;
    private long itemIdLow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemIdLow {
      get { return itemIdLow_; }
      set {
        itemIdLow_ = value;
      }
    }

    /// <summary>Field number for the "gbid_sockets" field.</summary>
    public const int GbidSocketsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_gbidSockets_codec
        = pb::FieldCodec.ForSFixed32(18);
    private readonly pbc::RepeatedField<int> gbidSockets_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GbidSockets {
      get { return gbidSockets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadoutItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadoutItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemIdLow != other.ItemIdLow) return false;
      if(!gbidSockets_.Equals(other.gbidSockets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemIdLow != 0L) hash ^= ItemIdLow.GetHashCode();
      hash ^= gbidSockets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemIdLow != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(ItemIdLow);
      }
      gbidSockets_.WriteTo(output, _repeated_gbidSockets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemIdLow != 0L) {
        size += 1 + 8;
      }
      size += gbidSockets_.CalculateSize(_repeated_gbidSockets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadoutItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemIdLow != 0L) {
        ItemIdLow = other.ItemIdLow;
      }
      gbidSockets_.Add(other.gbidSockets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ItemIdLow = input.ReadSFixed64();
            break;
          }
          case 18:
          case 21: {
            gbidSockets_.AddEntriesFrom(input, _repeated_gbidSockets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadoutPotion : pb::IMessage<LoadoutPotion> {
    private static readonly pb::MessageParser<LoadoutPotion> _parser = new pb::MessageParser<LoadoutPotion>(() => new LoadoutPotion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadoutPotion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadoutPotion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadoutPotion(LoadoutPotion other) : this() {
      itemIdLow_ = other.itemIdLow_;
      gbidPotion_ = other.gbidPotion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadoutPotion Clone() {
      return new LoadoutPotion(this);
    }

    /// <summary>Field number for the "item_id_low" field.</summary>
    public const int ItemIdLowFieldNumber = 1;
    private long itemIdLow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemIdLow {
      get { return itemIdLow_; }
      set {
        itemIdLow_ = value;
      }
    }

    /// <summary>Field number for the "gbid_potion" field.</summary>
    public const int GbidPotionFieldNumber = 2;
    private int gbidPotion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GbidPotion {
      get { return gbidPotion_; }
      set {
        gbidPotion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadoutPotion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadoutPotion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemIdLow != other.ItemIdLow) return false;
      if (GbidPotion != other.GbidPotion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemIdLow != 0L) hash ^= ItemIdLow.GetHashCode();
      if (GbidPotion != 0) hash ^= GbidPotion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemIdLow != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(ItemIdLow);
      }
      if (GbidPotion != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(GbidPotion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemIdLow != 0L) {
        size += 1 + 8;
      }
      if (GbidPotion != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadoutPotion other) {
      if (other == null) {
        return;
      }
      if (other.ItemIdLow != 0L) {
        ItemIdLow = other.ItemIdLow;
      }
      if (other.GbidPotion != 0) {
        GbidPotion = other.GbidPotion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ItemIdLow = input.ReadSFixed64();
            break;
          }
          case 21: {
            GbidPotion = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Loadout : pb::IMessage<Loadout> {
    private static readonly pb::MessageParser<Loadout> _parser = new pb::MessageParser<Loadout>(() => new Loadout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Loadout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loadout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loadout(Loadout other) : this() {
      equippedItems_ = other.equippedItems_.Clone();
      activeSkills_ = other.activeSkills_.Clone();
      snoTraits_ = other.snoTraits_.Clone();
      gbidLegendaryPowers_ = other.gbidLegendaryPowers_.Clone();
      name_ = other.name_;
      tabIcon_ = other.tabIcon_;
      equippedPotion_ = other.equippedPotion_ != null ? other.equippedPotion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loadout Clone() {
      return new Loadout(this);
    }

    /// <summary>Field number for the "equipped_items" field.</summary>
    public const int EquippedItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.Hero.LoadoutItem> _repeated_equippedItems_codec
        = pb::FieldCodec.ForMessage(10, global::D3.Hero.LoadoutItem.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.LoadoutItem> equippedItems_ = new pbc::RepeatedField<global::D3.Hero.LoadoutItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.LoadoutItem> EquippedItems {
      get { return equippedItems_; }
    }

    /// <summary>Field number for the "active_skills" field.</summary>
    public const int ActiveSkillsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::D3.Hero.SkillWithRune> _repeated_activeSkills_codec
        = pb::FieldCodec.ForMessage(18, global::D3.Hero.SkillWithRune.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.SkillWithRune> activeSkills_ = new pbc::RepeatedField<global::D3.Hero.SkillWithRune>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.SkillWithRune> ActiveSkills {
      get { return activeSkills_; }
    }

    /// <summary>Field number for the "sno_traits" field.</summary>
    public const int SnoTraitsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_snoTraits_codec
        = pb::FieldCodec.ForSFixed32(26);
    private readonly pbc::RepeatedField<int> snoTraits_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SnoTraits {
      get { return snoTraits_; }
    }

    /// <summary>Field number for the "gbid_legendary_powers" field.</summary>
    public const int GbidLegendaryPowersFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_gbidLegendaryPowers_codec
        = pb::FieldCodec.ForSFixed32(34);
    private readonly pbc::RepeatedField<int> gbidLegendaryPowers_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GbidLegendaryPowers {
      get { return gbidLegendaryPowers_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab_icon" field.</summary>
    public const int TabIconFieldNumber = 6;
    private int tabIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TabIcon {
      get { return tabIcon_; }
      set {
        tabIcon_ = value;
      }
    }

    /// <summary>Field number for the "equipped_potion" field.</summary>
    public const int EquippedPotionFieldNumber = 7;
    private global::D3.Hero.LoadoutPotion equippedPotion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D3.Hero.LoadoutPotion EquippedPotion {
      get { return equippedPotion_; }
      set {
        equippedPotion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Loadout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Loadout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equippedItems_.Equals(other.equippedItems_)) return false;
      if(!activeSkills_.Equals(other.activeSkills_)) return false;
      if(!snoTraits_.Equals(other.snoTraits_)) return false;
      if(!gbidLegendaryPowers_.Equals(other.gbidLegendaryPowers_)) return false;
      if (Name != other.Name) return false;
      if (TabIcon != other.TabIcon) return false;
      if (!object.Equals(EquippedPotion, other.EquippedPotion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equippedItems_.GetHashCode();
      hash ^= activeSkills_.GetHashCode();
      hash ^= snoTraits_.GetHashCode();
      hash ^= gbidLegendaryPowers_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (TabIcon != 0) hash ^= TabIcon.GetHashCode();
      if (equippedPotion_ != null) hash ^= EquippedPotion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      equippedItems_.WriteTo(output, _repeated_equippedItems_codec);
      activeSkills_.WriteTo(output, _repeated_activeSkills_codec);
      snoTraits_.WriteTo(output, _repeated_snoTraits_codec);
      gbidLegendaryPowers_.WriteTo(output, _repeated_gbidLegendaryPowers_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (TabIcon != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(TabIcon);
      }
      if (equippedPotion_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EquippedPotion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += equippedItems_.CalculateSize(_repeated_equippedItems_codec);
      size += activeSkills_.CalculateSize(_repeated_activeSkills_codec);
      size += snoTraits_.CalculateSize(_repeated_snoTraits_codec);
      size += gbidLegendaryPowers_.CalculateSize(_repeated_gbidLegendaryPowers_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (TabIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TabIcon);
      }
      if (equippedPotion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquippedPotion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Loadout other) {
      if (other == null) {
        return;
      }
      equippedItems_.Add(other.equippedItems_);
      activeSkills_.Add(other.activeSkills_);
      snoTraits_.Add(other.snoTraits_);
      gbidLegendaryPowers_.Add(other.gbidLegendaryPowers_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.TabIcon != 0) {
        TabIcon = other.TabIcon;
      }
      if (other.equippedPotion_ != null) {
        if (equippedPotion_ == null) {
          equippedPotion_ = new global::D3.Hero.LoadoutPotion();
        }
        EquippedPotion.MergeFrom(other.EquippedPotion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equippedItems_.AddEntriesFrom(input, _repeated_equippedItems_codec);
            break;
          }
          case 18: {
            activeSkills_.AddEntriesFrom(input, _repeated_activeSkills_codec);
            break;
          }
          case 26:
          case 29: {
            snoTraits_.AddEntriesFrom(input, _repeated_snoTraits_codec);
            break;
          }
          case 34:
          case 37: {
            gbidLegendaryPowers_.AddEntriesFrom(input, _repeated_gbidLegendaryPowers_codec);
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            TabIcon = input.ReadSInt32();
            break;
          }
          case 58: {
            if (equippedPotion_ == null) {
              equippedPotion_ = new global::D3.Hero.LoadoutPotion();
            }
            input.ReadMessage(equippedPotion_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipmentManagerData : pb::IMessage<EquipmentManagerData> {
    private static readonly pb::MessageParser<EquipmentManagerData> _parser = new pb::MessageParser<EquipmentManagerData>(() => new EquipmentManagerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentManagerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D3.Hero.HeroCommonReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentManagerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentManagerData(EquipmentManagerData other) : this() {
      loadouts_ = other.loadouts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentManagerData Clone() {
      return new EquipmentManagerData(this);
    }

    /// <summary>Field number for the "loadouts" field.</summary>
    public const int LoadoutsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D3.Hero.Loadout> _repeated_loadouts_codec
        = pb::FieldCodec.ForMessage(10, global::D3.Hero.Loadout.Parser);
    private readonly pbc::RepeatedField<global::D3.Hero.Loadout> loadouts_ = new pbc::RepeatedField<global::D3.Hero.Loadout>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D3.Hero.Loadout> Loadouts {
      get { return loadouts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentManagerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentManagerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!loadouts_.Equals(other.loadouts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= loadouts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      loadouts_.WriteTo(output, _repeated_loadouts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += loadouts_.CalculateSize(_repeated_loadouts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentManagerData other) {
      if (other == null) {
        return;
      }
      loadouts_.Add(other.loadouts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            loadouts_.AddEntriesFrom(input, _repeated_loadouts_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
